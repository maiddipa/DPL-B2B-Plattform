// <auto-generated />
using System;
using Dpl.B2b.Dal;
using Dpl.B2b.Dal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace Dpl.B2b.Dal.Migrations
{
    [DbContext(typeof(OlmaDbContext))]
    [Migration("20200630161724_AddEmployeeNoteEnumsToLocalizationItems")]
    partial class AddEmployeeNoteEnumsToLocalizationItems
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dpl.B2b.Dal.Models.AccountingRecordType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("RefLtmBookingTypeId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("AccountingRecordTypes");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.AdditionalField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PrintType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("AdditionalFields");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.AdditionalFieldValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdditionalFieldId")
                        .HasColumnType("int");

                    b.Property<float?>("ValueFloat")
                        .HasColumnType("real");

                    b.Property<int?>("ValueInt")
                        .HasColumnType("int");

                    b.Property<string>("ValueString")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("AdditionalFieldId");

                    b.ToTable("AdditionalFieldValues");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<Point>("GeoLocation")
                        .HasColumnType("geography");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("RefLmsAddressNumber")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("Street1")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Street2")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PartnerId");

                    b.HasIndex("RefLmsAddressNumber");

                    b.HasIndex("StateId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.BaseLoadCarrierMapping", b =>
                {
                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("LoadCarrierTypeId")
                        .HasColumnType("int");

                    b.HasKey("LoadCarrierId", "LoadCarrierTypeId");

                    b.HasIndex("LoadCarrierTypeId");

                    b.ToTable("BaseLoadCarrierMapping");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.BusinessHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadingLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LoadingLocationId");

                    b.ToTable("BusinessHours");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.BusinessHourException", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoadingLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LoadingLocationId");

                    b.ToTable("BusinessHourExceptions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CalculatedBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastBookingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostingAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostingAccountId")
                        .IsUnique();

                    b.ToTable("CalculatedBalances");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CalculatedBalancePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CalculatedBalanceId")
                        .HasColumnType("int");

                    b.Property<int>("CoordinatedBalance")
                        .HasColumnType("int");

                    b.Property<int>("InCoordinationCharge")
                        .HasColumnType("int");

                    b.Property<int>("InCoordinationCredit")
                        .HasColumnType("int");

                    b.Property<DateTime>("LatestUncoordinatedCharge")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LatestUncoordinatedCredit")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("PostingRequestBalanceCharge")
                        .HasColumnType("int");

                    b.Property<int>("PostingRequestBalanceCredit")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionalBalance")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionalCharge")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionalCredit")
                        .HasColumnType("int");

                    b.Property<int>("UncoordinatedCharge")
                        .HasColumnType("int");

                    b.Property<int>("UncoordinatedCredit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalculatedBalanceId");

                    b.HasIndex("LoadCarrierId");

                    b.ToTable("CalculatedBalancePositions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Iso2Code")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Iso3Code")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LicensePlateCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Iso2Code = "DE",
                            Iso3Code = "GER",
                            LicensePlateCode = "D",
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CountryState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Baden-Württemberg"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Bavaria"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Brandenburg"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            Name = "Bremen"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "Hamburg"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Name = "Hesse"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "Lower Saxony"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "Mecklenburg-Vorpommern"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            Name = "North Rhine-Westphalia"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 1,
                            Name = "Rhineland-Palatinate"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 1,
                            Name = "Saarland"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 1,
                            Name = "Saxony"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 1,
                            Name = "Saxony-Anhalt"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 1,
                            Name = "Schleswig-Holstein"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 1,
                            Name = "Thuringia"
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerNumber")
                        .HasColumnType("int");

                    b.Property<string>("CustomerNumberString")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(255)")
                        .HasComputedColumnSql("CONVERT(nvarchar(255), [CustomerNumber])")
                        .HasMaxLength(255);

                    b.Property<string>("DefaultLanguage")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPoolingPartner")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<Guid>("RefLmsCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerNumber");

                    b.HasIndex("CustomerNumberString");

                    b.HasIndex("DeletedById");

                    b.HasIndex("Name");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PartnerId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultLoadingLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("PostingAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DefaultLoadingLocationId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("Name");

                    b.HasIndex("PostingAccountId");

                    b.HasIndex("ShortName");

                    b.ToTable("CustomerDivisions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDivisionDocumentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("DefaultPrintCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentNumberSequenceId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("PrintCountMax")
                        .HasColumnType("int");

                    b.Property<int>("PrintCountMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DivisionId");

                    b.HasIndex("DocumentNumberSequenceId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("CustomerDivisionDocumentSettings");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDocumentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadCarrierTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ThresholdForWarningQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("LoadCarrierTypeId");

                    b.ToTable("CustomerDocumentSettings");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerIpSecurityRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("IpVersion")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("OrganizationId");

                    b.ToTable("CustomerIpSecurityRules");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PartnerId");

                    b.ToTable("CustomerPartners");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerPartnerDirectoryAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerPartnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DirectoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerPartnerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DirectoryId");

                    b.ToTable("CustomerPartnerDirectoryAccesses");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerSortingWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("SortingWorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SortingWorkerId");

                    b.ToTable("CustomerSortingWorkers");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DeliveryNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryNoteNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("SubmissionId");

                    b.ToTable("DeliveryNotes");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerDivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierReceiptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LtmsImportDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OrderMatchId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerDivisionId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LoadCarrierReceiptId")
                        .IsUnique()
                        .HasFilter("[LoadCarrierReceiptId] IS NOT NULL");

                    b.HasIndex("OrderMatchId")
                        .IsUnique()
                        .HasFilter("[OrderMatchId] IS NOT NULL");

                    b.HasIndex("StateId");

                    b.HasIndex("TypeId");

                    b.HasIndex("VoucherId")
                        .IsUnique()
                        .HasFilter("[VoucherId] IS NOT NULL");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FileId");

                    b.ToTable("DocumentFile");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentNumberSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanAddDivisionShortName")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAddDocumentTypeShortName")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAddPaddingForCounter")
                        .HasColumnType("bit");

                    b.Property<bool>("CanAddPaddingForCustomerNumber")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaddingLengthForCounter")
                        .HasColumnType("int");

                    b.Property<int>("PaddingLengthForCustomerNumber")
                        .HasColumnType("int");

                    b.Property<string>("PostfixForCustomerNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PrefixForCounter")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Separator")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("SeparatorAfterPrefix")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.ToTable("DocumentNumberSequences");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("DocumentReports");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanBeCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("DocumentStates");

                    b.HasData(
                        new
                        {
                            Id = 200,
                            CanBeCanceled = false,
                            IsCanceled = false,
                            Name = "Ausgeglichen"
                        },
                        new
                        {
                            Id = 1,
                            CanBeCanceled = true,
                            IsCanceled = false,
                            Name = "erstellt (mit Belegdruck)"
                        },
                        new
                        {
                            Id = 99,
                            CanBeCanceled = false,
                            IsCanceled = false,
                            Name = "Verfallen"
                        },
                        new
                        {
                            Id = 5,
                            CanBeCanceled = false,
                            IsCanceled = false,
                            Name = "gespeichert"
                        },
                        new
                        {
                            Id = 3,
                            CanBeCanceled = false,
                            IsCanceled = false,
                            Name = "erstellt (beleglos)"
                        },
                        new
                        {
                            Id = 255,
                            CanBeCanceled = false,
                            IsCanceled = true,
                            Name = "storniert"
                        },
                        new
                        {
                            Id = 4,
                            CanBeCanceled = false,
                            IsCanceled = false,
                            Name = "gesendet"
                        },
                        new
                        {
                            Id = 2,
                            CanBeCanceled = true,
                            IsCanceled = false,
                            Name = "gedruckt"
                        },
                        new
                        {
                            Id = 254,
                            CanBeCanceled = false,
                            IsCanceled = false,
                            Name = "erledigt"
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PrintType")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.ToTable("DocumentTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDefault = true,
                            IsDeleted = false,
                            PrintType = 1,
                            Version = 1
                        },
                        new
                        {
                            Id = 2,
                            IsDefault = true,
                            IsDeleted = false,
                            PrintType = 2,
                            Version = 1
                        },
                        new
                        {
                            Id = 3,
                            IsDefault = true,
                            IsDeleted = false,
                            PrintType = 3,
                            Version = 1
                        },
                        new
                        {
                            Id = 4,
                            IsDefault = true,
                            IsDeleted = false,
                            PrintType = 4,
                            Version = 1
                        },
                        new
                        {
                            Id = 5,
                            IsDefault = true,
                            IsDeleted = false,
                            PrintType = 5,
                            Version = 1
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentTemplateLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTemplateId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DocumentTemplateLabel");

                    b.HasData(
                        new
                        {
                            Id = 2184,
                            DocumentTemplateId = 1,
                            Label = "label1",
                            LanguageId = 1,
                            Text = "Datum",
                            Version = 0
                        },
                        new
                        {
                            Id = 2195,
                            DocumentTemplateId = 1,
                            Label = "label1",
                            LanguageId = 2,
                            Text = "DPL-Code:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2189,
                            DocumentTemplateId = 1,
                            Label = "label1",
                            LanguageId = 3,
                            Text = "DPL-Code:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2191,
                            DocumentTemplateId = 1,
                            Label = "label1",
                            LanguageId = 4,
                            Text = "DPL-Code:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2182,
                            DocumentTemplateId = 1,
                            Label = "label2",
                            LanguageId = 1,
                            Text = "Kennzeichen",
                            Version = 0
                        },
                        new
                        {
                            Id = 2181,
                            DocumentTemplateId = 1,
                            Label = "label3",
                            LanguageId = 1,
                            Text = "Unterschrift ([TruckDriver])",
                            Version = 0
                        },
                        new
                        {
                            Id = 2203,
                            DocumentTemplateId = 1,
                            Label = "label4",
                            LanguageId = 1,
                            Text = "[Number]",
                            Version = 0
                        },
                        new
                        {
                            Id = 2204,
                            DocumentTemplateId = 1,
                            Label = "tableCell1",
                            LanguageId = 1,
                            Text = "Beleg-Typ / -Einlösung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2187,
                            DocumentTemplateId = 1,
                            Label = "tableCell11",
                            LanguageId = 1,
                            Text = "Hinweis:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2185,
                            DocumentTemplateId = 1,
                            Label = "tableCell12",
                            LanguageId = 1,
                            Text = "Dieser Beleg ist nicht an Dritte übertragbar.",
                            Version = 0
                        },
                        new
                        {
                            Id = 2175,
                            DocumentTemplateId = 1,
                            Label = "tableCell13",
                            LanguageId = 1,
                            Text = "Nicht getauschte Ladungsträger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2176,
                            DocumentTemplateId = 1,
                            Label = "tableCell15",
                            LanguageId = 1,
                            Text = "Menge",
                            Version = 0
                        },
                        new
                        {
                            Id = 2177,
                            DocumentTemplateId = 1,
                            Label = "tableCell16",
                            LanguageId = 1,
                            Text = "Ladungsträger-Typ",
                            Version = 0
                        },
                        new
                        {
                            Id = 2178,
                            DocumentTemplateId = 1,
                            Label = "tableCell18",
                            LanguageId = 1,
                            Text = "Grund für die Belegerstellung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2179,
                            DocumentTemplateId = 1,
                            Label = "tableCell19",
                            LanguageId = 1,
                            Text = "",
                            Version = 0
                        },
                        new
                        {
                            Id = 2180,
                            DocumentTemplateId = 1,
                            Label = "tableCell21",
                            LanguageId = 1,
                            Text = "Beleg-Einlösung / Ladungsträger-Ausgabe:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2173,
                            DocumentTemplateId = 1,
                            Label = "tableCell3",
                            LanguageId = 1,
                            Text = "Kontakt zu DPL:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2174,
                            DocumentTemplateId = 1,
                            Label = "tableCell4",
                            LanguageId = 1,
                            Text = @"DPL Deutsche Paletten Logistik GmbH  -  Overweg 12  -  D-59494 Soest    (DPL)
E-Mail: info@dpl-pooling.com / Tel. +49 2921 7899-0   / Fax. Tel. +49 2921 7899-178",
                            Version = 0
                        },
                        new
                        {
                            Id = 2172,
                            DocumentTemplateId = 1,
                            Label = "tableCell5",
                            LanguageId = 1,
                            Text = "Empfänger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2171,
                            DocumentTemplateId = 1,
                            Label = "tableCell7",
                            LanguageId = 1,
                            Text = "Aussteller:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2170,
                            DocumentTemplateId = 1,
                            Label = "tableCell9",
                            LanguageId = 1,
                            Text = "DPL-Digitalcode:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2205,
                            DocumentTemplateId = 1,
                            Label = "xrLabel19",
                            LanguageId = 1,
                            Text = "Aussteller:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2200,
                            DocumentTemplateId = 1,
                            Label = "xrLabel19",
                            LanguageId = 2,
                            Text = "Issuer:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2169,
                            DocumentTemplateId = 1,
                            Label = "xrLabel19",
                            LanguageId = 3,
                            Text = "Emetteur : ",
                            Version = 0
                        },
                        new
                        {
                            Id = 2201,
                            DocumentTemplateId = 1,
                            Label = "xrLabel19",
                            LanguageId = 4,
                            Text = "Wystawiajacy:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2186,
                            DocumentTemplateId = 1,
                            Label = "xrLabel22",
                            LanguageId = 1,
                            Text = "Unterschrift ([IssuerName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 2190,
                            DocumentTemplateId = 1,
                            Label = "xrLabel22",
                            LanguageId = 2,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 2198,
                            DocumentTemplateId = 1,
                            Label = "xrLabel22",
                            LanguageId = 3,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 2196,
                            DocumentTemplateId = 1,
                            Label = "xrLabel22",
                            LanguageId = 4,
                            Text = "Podpis",
                            Version = 0
                        },
                        new
                        {
                            Id = 2183,
                            DocumentTemplateId = 1,
                            Label = "xrLabel23",
                            LanguageId = 1,
                            Text = "Empfänger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2202,
                            DocumentTemplateId = 1,
                            Label = "xrLabel23",
                            LanguageId = 2,
                            Text = "Recipient:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2194,
                            DocumentTemplateId = 1,
                            Label = "xrLabel23",
                            LanguageId = 3,
                            Text = "Destinataire :",
                            Version = 0
                        },
                        new
                        {
                            Id = 2193,
                            DocumentTemplateId = 1,
                            Label = "xrLabel23",
                            LanguageId = 4,
                            Text = "Odbiorca:",
                            Version = 0
                        },
                        new
                        {
                            Id = 2188,
                            DocumentTemplateId = 1,
                            Label = "xrLabel7",
                            LanguageId = 1,
                            Text = "DPL-Pooling-Gutschrift-Nr.",
                            Version = 0
                        },
                        new
                        {
                            Id = 2199,
                            DocumentTemplateId = 1,
                            Label = "xrLabel7",
                            LanguageId = 2,
                            Text = "Palettenannahme-Beleg TODO",
                            Version = 0
                        },
                        new
                        {
                            Id = 2192,
                            DocumentTemplateId = 1,
                            Label = "xrLabel7",
                            LanguageId = 3,
                            Text = "Palettenannahme-Quittung FR TODO",
                            Version = 0
                        },
                        new
                        {
                            Id = 2197,
                            DocumentTemplateId = 1,
                            Label = "xrLabel7",
                            LanguageId = 4,
                            Text = "Palettenannahme-Quittung PL TODO",
                            Version = 0
                        },
                        new
                        {
                            Id = 4017,
                            DocumentTemplateId = 2,
                            Label = "label1",
                            LanguageId = 1,
                            Text = "Datum",
                            Version = 0
                        },
                        new
                        {
                            Id = 4019,
                            DocumentTemplateId = 2,
                            Label = "label3",
                            LanguageId = 1,
                            Text = "Unterschrift ([TruckDriverName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 4020,
                            DocumentTemplateId = 2,
                            Label = "label4",
                            LanguageId = 1,
                            Text = "Kennzeichen",
                            Version = 0
                        },
                        new
                        {
                            Id = 4037,
                            DocumentTemplateId = 2,
                            Label = "tableCell1",
                            LanguageId = 1,
                            Text = "Hinweis:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4031,
                            DocumentTemplateId = 2,
                            Label = "tableCell11",
                            LanguageId = 1,
                            Text = "Sonstige-Nr.:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4032,
                            DocumentTemplateId = 2,
                            Label = "tableCell13",
                            LanguageId = 1,
                            Text = "Abholschein-Nr.:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4033,
                            DocumentTemplateId = 2,
                            Label = "tableCell15",
                            LanguageId = 1,
                            Text = "Lieferschein-Nr.:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4034,
                            DocumentTemplateId = 2,
                            Label = "tableCell17",
                            LanguageId = 1,
                            Text = "DPL-Digitalcode:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4035,
                            DocumentTemplateId = 2,
                            Label = "tableCell19",
                            LanguageId = 1,
                            Text = "Beleg-Typ / -Einlösung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4036,
                            DocumentTemplateId = 2,
                            Label = "tableCell2",
                            LanguageId = 1,
                            Text = "Achtung Annahme-/Ausgabestelle!   Den quittierten Beleg unbedingt aufbewahren!",
                            Version = 0
                        },
                        new
                        {
                            Id = 4025,
                            DocumentTemplateId = 2,
                            Label = "tableCell21",
                            LanguageId = 1,
                            Text = "Angenommene und ausgegebene Ladungsträger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4024,
                            DocumentTemplateId = 2,
                            Label = "tableCell23",
                            LanguageId = 1,
                            Text = "Menge",
                            Version = 0
                        },
                        new
                        {
                            Id = 4023,
                            DocumentTemplateId = 2,
                            Label = "tableCell24",
                            LanguageId = 1,
                            Text = "Ladungsträger-Typ",
                            Version = 0
                        },
                        new
                        {
                            Id = 4021,
                            DocumentTemplateId = 2,
                            Label = "tableCell26",
                            LanguageId = 1,
                            Text = "Bestätigung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4022,
                            DocumentTemplateId = 2,
                            Label = "tableCell29",
                            LanguageId = 1,
                            Text = "Qualität",
                            Version = 0
                        },
                        new
                        {
                            Id = 4027,
                            DocumentTemplateId = 2,
                            Label = "tableCell3",
                            LanguageId = 1,
                            Text = "Kontakt zu DPL:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4026,
                            DocumentTemplateId = 2,
                            Label = "tableCell4",
                            LanguageId = 1,
                            Text = @"DPL Deutsche Paletten Logistik GmbH  -  Overweg 12  -  D-59494 Soest    (DPL)
E-Mail: info@dpl-pooling.com / Tel. +49 2921 7899-0   / Fax. Tel. +49 2921 7899-178",
                            Version = 0
                        },
                        new
                        {
                            Id = 4028,
                            DocumentTemplateId = 2,
                            Label = "tableCell5",
                            LanguageId = 1,
                            Text = "Transport für Firma:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4029,
                            DocumentTemplateId = 2,
                            Label = "tableCell7",
                            LanguageId = 1,
                            Text = "Firma auf LKW:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4030,
                            DocumentTemplateId = 2,
                            Label = "tableCell9",
                            LanguageId = 1,
                            Text = "Aussteller-ID:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4047,
                            DocumentTemplateId = 2,
                            Label = "xrLabel19",
                            LanguageId = 1,
                            Text = "Aussteller:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4041,
                            DocumentTemplateId = 2,
                            Label = "xrLabel19",
                            LanguageId = 2,
                            Text = "Issuer:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4039,
                            DocumentTemplateId = 2,
                            Label = "xrLabel19",
                            LanguageId = 3,
                            Text = "Emetteur : ",
                            Version = 0
                        },
                        new
                        {
                            Id = 4042,
                            DocumentTemplateId = 2,
                            Label = "xrLabel19",
                            LanguageId = 4,
                            Text = "Wystawiajacy:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4046,
                            DocumentTemplateId = 2,
                            Label = "xrLabel22",
                            LanguageId = 1,
                            Text = "Unterschrift ([IssuerName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 4040,
                            DocumentTemplateId = 2,
                            Label = "xrLabel22",
                            LanguageId = 2,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 4044,
                            DocumentTemplateId = 2,
                            Label = "xrLabel22",
                            LanguageId = 3,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 4043,
                            DocumentTemplateId = 2,
                            Label = "xrLabel22",
                            LanguageId = 4,
                            Text = "Podpis",
                            Version = 0
                        },
                        new
                        {
                            Id = 4018,
                            DocumentTemplateId = 2,
                            Label = "xrLabel23",
                            LanguageId = 1,
                            Text = "Empfänger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4016,
                            DocumentTemplateId = 2,
                            Label = "xrLabel23",
                            LanguageId = 2,
                            Text = "Recipient:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4038,
                            DocumentTemplateId = 2,
                            Label = "xrLabel23",
                            LanguageId = 3,
                            Text = "Destinataire :",
                            Version = 0
                        },
                        new
                        {
                            Id = 4045,
                            DocumentTemplateId = 2,
                            Label = "xrLabel23",
                            LanguageId = 4,
                            Text = "Odbiorca:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3956,
                            DocumentTemplateId = 3,
                            Label = "label1",
                            LanguageId = 1,
                            Text = "Datum",
                            Version = 0
                        },
                        new
                        {
                            Id = 3958,
                            DocumentTemplateId = 3,
                            Label = "label3",
                            LanguageId = 1,
                            Text = "Unterschrift ([TruckDriverName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 3959,
                            DocumentTemplateId = 3,
                            Label = "label4",
                            LanguageId = 1,
                            Text = "Kennzeichen",
                            Version = 0
                        },
                        new
                        {
                            Id = 3976,
                            DocumentTemplateId = 3,
                            Label = "tableCell1",
                            LanguageId = 1,
                            Text = "Hinweis:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3970,
                            DocumentTemplateId = 3,
                            Label = "tableCell11",
                            LanguageId = 1,
                            Text = "Sonstige-Nr.:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3971,
                            DocumentTemplateId = 3,
                            Label = "tableCell13",
                            LanguageId = 1,
                            Text = "Abholschein-Nr.:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3972,
                            DocumentTemplateId = 3,
                            Label = "tableCell15",
                            LanguageId = 1,
                            Text = "Lieferschein-Nr.:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3973,
                            DocumentTemplateId = 3,
                            Label = "tableCell17",
                            LanguageId = 1,
                            Text = "DPL-Digitalcode:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3974,
                            DocumentTemplateId = 3,
                            Label = "tableCell19",
                            LanguageId = 1,
                            Text = "Beleg-Typ / -Einlösung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3975,
                            DocumentTemplateId = 3,
                            Label = "tableCell2",
                            LanguageId = 1,
                            Text = "Achtung Ausgabestelle!   Den quittierten Beleg unbedingt aufbewahren!",
                            Version = 0
                        },
                        new
                        {
                            Id = 3964,
                            DocumentTemplateId = 3,
                            Label = "tableCell21",
                            LanguageId = 1,
                            Text = "Ausgegebene Ladungsträger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3963,
                            DocumentTemplateId = 3,
                            Label = "tableCell23",
                            LanguageId = 1,
                            Text = "Menge",
                            Version = 0
                        },
                        new
                        {
                            Id = 3962,
                            DocumentTemplateId = 3,
                            Label = "tableCell24",
                            LanguageId = 1,
                            Text = "Ladungsträger-Typ",
                            Version = 0
                        },
                        new
                        {
                            Id = 3960,
                            DocumentTemplateId = 3,
                            Label = "tableCell26",
                            LanguageId = 1,
                            Text = "Bestätigung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3961,
                            DocumentTemplateId = 3,
                            Label = "tableCell29",
                            LanguageId = 1,
                            Text = "Qualität",
                            Version = 0
                        },
                        new
                        {
                            Id = 3966,
                            DocumentTemplateId = 3,
                            Label = "tableCell3",
                            LanguageId = 1,
                            Text = "Kontakt zu DPL:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3965,
                            DocumentTemplateId = 3,
                            Label = "tableCell4",
                            LanguageId = 1,
                            Text = @"DPL Deutsche Paletten Logistik GmbH  -  Overweg 12  -  D-59494 Soest    (DPL)
E-Mail: info@dpl-pooling.com / Tel. +49 2921 7899-0   / Fax. Tel. +49 2921 7899-178",
                            Version = 0
                        },
                        new
                        {
                            Id = 3967,
                            DocumentTemplateId = 3,
                            Label = "tableCell5",
                            LanguageId = 1,
                            Text = "Abholung für Firma:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3968,
                            DocumentTemplateId = 3,
                            Label = "tableCell7",
                            LanguageId = 1,
                            Text = "Firma auf abholendem LKW:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3969,
                            DocumentTemplateId = 3,
                            Label = "tableCell9",
                            LanguageId = 1,
                            Text = "Aussteller-ID:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3986,
                            DocumentTemplateId = 3,
                            Label = "xrLabel19",
                            LanguageId = 1,
                            Text = "Aussteller (Ausgabe-Quittung):",
                            Version = 0
                        },
                        new
                        {
                            Id = 3980,
                            DocumentTemplateId = 3,
                            Label = "xrLabel19",
                            LanguageId = 2,
                            Text = "Issuer:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3978,
                            DocumentTemplateId = 3,
                            Label = "xrLabel19",
                            LanguageId = 3,
                            Text = "Emetteur : ",
                            Version = 0
                        },
                        new
                        {
                            Id = 3981,
                            DocumentTemplateId = 3,
                            Label = "xrLabel19",
                            LanguageId = 4,
                            Text = "Wystawiajacy:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3985,
                            DocumentTemplateId = 3,
                            Label = "xrLabel22",
                            LanguageId = 1,
                            Text = "Unterschrift ([IssuerName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 3979,
                            DocumentTemplateId = 3,
                            Label = "xrLabel22",
                            LanguageId = 2,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 3983,
                            DocumentTemplateId = 3,
                            Label = "xrLabel22",
                            LanguageId = 3,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 3982,
                            DocumentTemplateId = 3,
                            Label = "xrLabel22",
                            LanguageId = 4,
                            Text = "Podpis",
                            Version = 0
                        },
                        new
                        {
                            Id = 3957,
                            DocumentTemplateId = 3,
                            Label = "xrLabel23",
                            LanguageId = 1,
                            Text = "Empfänger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3955,
                            DocumentTemplateId = 3,
                            Label = "xrLabel23",
                            LanguageId = 2,
                            Text = "Recipient:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3977,
                            DocumentTemplateId = 3,
                            Label = "xrLabel23",
                            LanguageId = 3,
                            Text = "Destinataire :",
                            Version = 0
                        },
                        new
                        {
                            Id = 3984,
                            DocumentTemplateId = 3,
                            Label = "xrLabel23",
                            LanguageId = 4,
                            Text = "Odbiorca:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3988,
                            DocumentTemplateId = 4,
                            Label = "label1",
                            LanguageId = 1,
                            Text = "Datum",
                            Version = 0
                        },
                        new
                        {
                            Id = 3990,
                            DocumentTemplateId = 4,
                            Label = "label3",
                            LanguageId = 1,
                            Text = "Unterschrift ([TruckDriverName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 3991,
                            DocumentTemplateId = 4,
                            Label = "label4",
                            LanguageId = 1,
                            Text = "Kennzeichen",
                            Version = 0
                        },
                        new
                        {
                            Id = 4005,
                            DocumentTemplateId = 4,
                            Label = "tableCell1",
                            LanguageId = 1,
                            Text = "Hinweis:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3993,
                            DocumentTemplateId = 4,
                            Label = "tableCell12",
                            LanguageId = 1,
                            Text = "Qualität",
                            Version = 0
                        },
                        new
                        {
                            Id = 4002,
                            DocumentTemplateId = 4,
                            Label = "tableCell17",
                            LanguageId = 1,
                            Text = "DPL-Digitalcode:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4003,
                            DocumentTemplateId = 4,
                            Label = "tableCell19",
                            LanguageId = 1,
                            Text = "Beleg-Typ / -Einlösung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4004,
                            DocumentTemplateId = 4,
                            Label = "tableCell2",
                            LanguageId = 1,
                            Text = "Achtung Annahmestelle!   Den quittierten Beleg unbedingt in Kopie aufbewahren!",
                            Version = 0
                        },
                        new
                        {
                            Id = 3996,
                            DocumentTemplateId = 4,
                            Label = "tableCell21",
                            LanguageId = 1,
                            Text = "Angelieferte Ladungsträger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3995,
                            DocumentTemplateId = 4,
                            Label = "tableCell23",
                            LanguageId = 1,
                            Text = "Menge",
                            Version = 0
                        },
                        new
                        {
                            Id = 3994,
                            DocumentTemplateId = 4,
                            Label = "tableCell24",
                            LanguageId = 1,
                            Text = "Ladungsträger-Typ",
                            Version = 0
                        },
                        new
                        {
                            Id = 3992,
                            DocumentTemplateId = 4,
                            Label = "tableCell26",
                            LanguageId = 1,
                            Text = "Bestätigung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3998,
                            DocumentTemplateId = 4,
                            Label = "tableCell3",
                            LanguageId = 1,
                            Text = "Kontakt zu DPL:",
                            Version = 0
                        },
                        new
                        {
                            Id = 3997,
                            DocumentTemplateId = 4,
                            Label = "tableCell4",
                            LanguageId = 1,
                            Text = @"DPL Deutsche Paletten Logistik GmbH  -  Overweg 12  -  D-59494 Soest    (DPL)
E-Mail: info@dpl-pooling.com / Tel. +49 2921 7899-0   / Fax. Tel. +49 2921 7899-178",
                            Version = 0
                        },
                        new
                        {
                            Id = 3999,
                            DocumentTemplateId = 4,
                            Label = "tableCell5",
                            LanguageId = 1,
                            Text = "Anlieferung für Firma:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4001,
                            DocumentTemplateId = 4,
                            Label = "tableCell7",
                            LanguageId = 1,
                            Text = "Firma auf anlieferndem LKW:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4014,
                            DocumentTemplateId = 4,
                            Label = "tableCell9",
                            LanguageId = 1,
                            Text = "Aussteller-ID:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4015,
                            DocumentTemplateId = 4,
                            Label = "xrLabel19",
                            LanguageId = 1,
                            Text = "Aussteller (Annahme-Quittung):",
                            Version = 0
                        },
                        new
                        {
                            Id = 4009,
                            DocumentTemplateId = 4,
                            Label = "xrLabel19",
                            LanguageId = 2,
                            Text = "Issuer:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4007,
                            DocumentTemplateId = 4,
                            Label = "xrLabel19",
                            LanguageId = 3,
                            Text = "Emetteur : ",
                            Version = 0
                        },
                        new
                        {
                            Id = 4010,
                            DocumentTemplateId = 4,
                            Label = "xrLabel19",
                            LanguageId = 4,
                            Text = "Wystawiajacy:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4000,
                            DocumentTemplateId = 4,
                            Label = "xrLabel22",
                            LanguageId = 1,
                            Text = "Unterschrift ([IssuerName])",
                            Version = 0
                        },
                        new
                        {
                            Id = 4008,
                            DocumentTemplateId = 4,
                            Label = "xrLabel22",
                            LanguageId = 2,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 4012,
                            DocumentTemplateId = 4,
                            Label = "xrLabel22",
                            LanguageId = 3,
                            Text = "Signature",
                            Version = 0
                        },
                        new
                        {
                            Id = 4011,
                            DocumentTemplateId = 4,
                            Label = "xrLabel22",
                            LanguageId = 4,
                            Text = "Podpis",
                            Version = 0
                        },
                        new
                        {
                            Id = 3989,
                            DocumentTemplateId = 4,
                            Label = "xrLabel23",
                            LanguageId = 1,
                            Text = "Empfänger (Annahme-Quittung):",
                            Version = 0
                        },
                        new
                        {
                            Id = 3987,
                            DocumentTemplateId = 4,
                            Label = "xrLabel23",
                            LanguageId = 2,
                            Text = "Recipient:",
                            Version = 0
                        },
                        new
                        {
                            Id = 4006,
                            DocumentTemplateId = 4,
                            Label = "xrLabel23",
                            LanguageId = 3,
                            Text = "Destinataire :",
                            Version = 0
                        },
                        new
                        {
                            Id = 4013,
                            DocumentTemplateId = 4,
                            Label = "xrLabel23",
                            LanguageId = 4,
                            Text = "Odbiorca:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6133,
                            DocumentTemplateId = 5,
                            Label = "label5",
                            LanguageId = 1,
                            Text = "Ladevorschriften:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6142,
                            DocumentTemplateId = 5,
                            Label = "tableCell1",
                            LanguageId = 1,
                            Text = "",
                            Version = 0
                        },
                        new
                        {
                            Id = 6154,
                            DocumentTemplateId = 5,
                            Label = "tableCell12",
                            LanguageId = 1,
                            Text = "Qualität",
                            Version = 0
                        },
                        new
                        {
                            Id = 6139,
                            DocumentTemplateId = 5,
                            Label = "tableCell13",
                            LanguageId = 1,
                            Text = "",
                            Version = 0
                        },
                        new
                        {
                            Id = 6152,
                            DocumentTemplateId = 5,
                            Label = "tableCell15",
                            LanguageId = 1,
                            Text = "Heckbeladung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6151,
                            DocumentTemplateId = 5,
                            Label = "tableCell16",
                            LanguageId = 1,
                            Text = "",
                            Version = 0
                        },
                        new
                        {
                            Id = 6145,
                            DocumentTemplateId = 5,
                            Label = "tableCell17",
                            LanguageId = 1,
                            Text = "DPL-Digitalcode:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6150,
                            DocumentTemplateId = 5,
                            Label = "tableCell19",
                            LanguageId = 1,
                            Text = "Seitenbeladung:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6149,
                            DocumentTemplateId = 5,
                            Label = "tableCell20",
                            LanguageId = 1,
                            Text = "",
                            Version = 0
                        },
                        new
                        {
                            Id = 6135,
                            DocumentTemplateId = 5,
                            Label = "tableCell21",
                            LanguageId = 1,
                            Text = "Zu transportierende Ladungsträger:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6134,
                            DocumentTemplateId = 5,
                            Label = "tableCell23",
                            LanguageId = 1,
                            Text = "Menge",
                            Version = 0
                        },
                        new
                        {
                            Id = 6153,
                            DocumentTemplateId = 5,
                            Label = "tableCell24",
                            LanguageId = 1,
                            Text = "Ladungsträger-Typ",
                            Version = 0
                        },
                        new
                        {
                            Id = 6148,
                            DocumentTemplateId = 5,
                            Label = "tableCell26",
                            LanguageId = 1,
                            Text = "Jumbo LKW:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6147,
                            DocumentTemplateId = 5,
                            Label = "tableCell27",
                            LanguageId = 1,
                            Text = "",
                            Version = 0
                        },
                        new
                        {
                            Id = 6141,
                            DocumentTemplateId = 5,
                            Label = "tableCell28",
                            LanguageId = 1,
                            Text = "Ladezeit:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6137,
                            DocumentTemplateId = 5,
                            Label = "tableCell3",
                            LanguageId = 1,
                            Text = "Kontakt zu DPL:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6138,
                            DocumentTemplateId = 5,
                            Label = "tableCell30",
                            LanguageId = 1,
                            Text = "Anlieferzeit:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6146,
                            DocumentTemplateId = 5,
                            Label = "tableCell32",
                            LanguageId = 1,
                            Text = "Stapelhöhe:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6136,
                            DocumentTemplateId = 5,
                            Label = "tableCell4",
                            LanguageId = 1,
                            Text = @"DPL Deutsche Paletten Logistik GmbH  -  Overweg 12  -  D-59494 Soest    (DPL)
E-Mail: info@dpl-pooling.com / Tel. +49 2921 7899-0   / Fax. Tel. +49 2921 7899-178",
                            Version = 0
                        },
                        new
                        {
                            Id = 6140,
                            DocumentTemplateId = 5,
                            Label = "tableCell5",
                            LanguageId = 1,
                            Text = "Anlieferstelle:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6143,
                            DocumentTemplateId = 5,
                            Label = "tableCell7",
                            LanguageId = 1,
                            Text = "Ladestelle:",
                            Version = 0
                        },
                        new
                        {
                            Id = 6144,
                            DocumentTemplateId = 5,
                            Label = "tableCell9",
                            LanguageId = 1,
                            Text = "Aussteller-ID:",
                            Version = 0
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessDomain")
                        .HasColumnType("int");

                    b.Property<bool>("HasReport")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("OriginalAvailableForMinutes")
                        .HasColumnType("int");

                    b.Property<int>("PrintType")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "VoucherDirectReceipt",
                            OriginalAvailableForMinutes = 0,
                            PrintType = 1,
                            ShortName = "VDR",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "VoucherDigital",
                            OriginalAvailableForMinutes = 0,
                            PrintType = 1,
                            ShortName = "VD",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "VoucherOriginal",
                            OriginalAvailableForMinutes = 0,
                            PrintType = 1,
                            ShortName = "VO",
                            Type = 3
                        },
                        new
                        {
                            Id = 4,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "LoadCarrierReceiptExchange",
                            OriginalAvailableForMinutes = 30,
                            PrintType = 2,
                            ShortName = "LCRE",
                            Type = 4
                        },
                        new
                        {
                            Id = 5,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "LoadCarrierReceiptPickup",
                            OriginalAvailableForMinutes = 30,
                            PrintType = 3,
                            ShortName = "LCRP",
                            Type = 5
                        },
                        new
                        {
                            Id = 6,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "LoadCarrierReceiptDelivery",
                            OriginalAvailableForMinutes = 30,
                            PrintType = 4,
                            ShortName = "LCRD",
                            Type = 6
                        },
                        new
                        {
                            Id = 7,
                            BusinessDomain = 0,
                            HasReport = true,
                            Name = "TransportVoucher",
                            OriginalAvailableForMinutes = 0,
                            PrintType = 5,
                            ShortName = "TV",
                            Type = 7
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.EmployeeNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ContactedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoadCarrierReceiptId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LoadCarrierReceiptId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("EmployeeNote");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.ExpressCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CustomBookingText")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DigitalCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("IssuingCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("IssuingDivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("PostingAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ValidDischarges")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherReasonTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("IssuingCustomerId");

                    b.HasIndex("IssuingDivisionId");

                    b.HasIndex("PostingAccountId");

                    b.ToTable("ExpressCodes");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InternalFullPathAndName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<float>("Order")
                        .HasColumnType("real");

                    b.Property<int>("QualityId")
                        .HasColumnType("int");

                    b.Property<int>("RefLmsQuality2PalletId")
                        .HasColumnType("int");

                    b.Property<short>("RefLtmsPalletId")
                        .HasColumnType("smallint");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QualityId");

                    b.HasIndex("TypeId");

                    b.ToTable("LoadCarriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "EUR A",
                            Order = 1f,
                            QualityId = 30,
                            RefLmsQuality2PalletId = 2003,
                            RefLtmsPalletId = (short)201,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 2,
                            Name = "EUR B",
                            Order = 2f,
                            QualityId = 31,
                            RefLmsQuality2PalletId = 2004,
                            RefLtmsPalletId = (short)202,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 3,
                            Name = "EUR C",
                            Order = 3f,
                            QualityId = 32,
                            RefLmsQuality2PalletId = 2001,
                            RefLtmsPalletId = (short)203,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 100,
                            Name = "DD U",
                            Order = -1f,
                            QualityId = -1,
                            RefLmsQuality2PalletId = 1018,
                            RefLtmsPalletId = (short)100,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 101,
                            Name = "DD 1A",
                            Order = 1f,
                            QualityId = 10,
                            RefLmsQuality2PalletId = 1003,
                            RefLtmsPalletId = (short)101,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 102,
                            Name = "DD 2A",
                            Order = 2f,
                            QualityId = 11,
                            RefLmsQuality2PalletId = 1004,
                            RefLtmsPalletId = (short)102,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 103,
                            Name = "DD 2B",
                            Order = 3f,
                            QualityId = 12,
                            RefLmsQuality2PalletId = 1001,
                            RefLtmsPalletId = (short)103,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 104,
                            Name = "DD D",
                            Order = 4f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 1002,
                            RefLtmsPalletId = (short)104,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 105,
                            Name = "DD I",
                            Order = 0f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 1001,
                            RefLtmsPalletId = (short)105,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 106,
                            Name = "DD Neu",
                            Order = 9f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 1005,
                            RefLtmsPalletId = (short)106,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 107,
                            Name = "DD 2BMT",
                            Order = 5f,
                            QualityId = 23,
                            RefLmsQuality2PalletId = 1001,
                            RefLtmsPalletId = (short)107,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 108,
                            Name = "DD 2BRmp",
                            Order = 6f,
                            QualityId = 24,
                            RefLmsQuality2PalletId = 1001,
                            RefLtmsPalletId = (short)108,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 109,
                            Name = "DD Schr",
                            Order = 7f,
                            QualityId = 20,
                            RefLmsQuality2PalletId = 1028,
                            RefLtmsPalletId = (short)109,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 110,
                            Name = "DD Chep",
                            Order = 8f,
                            QualityId = 21,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)110,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 111,
                            Name = "DD 2BG",
                            Order = 9f,
                            QualityId = 28,
                            RefLmsQuality2PalletId = 1024,
                            RefLtmsPalletId = (short)111,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 112,
                            Name = "DD 2APlus",
                            Order = 10f,
                            QualityId = 29,
                            RefLmsQuality2PalletId = 1023,
                            RefLtmsPalletId = (short)112,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 151,
                            Name = "EPAL7 Neu",
                            Order = 0f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)151,
                            TypeId = 21
                        },
                        new
                        {
                            Id = 200,
                            Name = "EUR U",
                            Order = 5f,
                            QualityId = -1,
                            RefLmsQuality2PalletId = 2018,
                            RefLtmsPalletId = (short)200,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 201,
                            Name = "EUR 1A",
                            Order = 1f,
                            QualityId = 10,
                            RefLmsQuality2PalletId = 2003,
                            RefLtmsPalletId = (short)201,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 202,
                            Name = "EUR 2A",
                            Order = 2f,
                            QualityId = 11,
                            RefLmsQuality2PalletId = 2004,
                            RefLtmsPalletId = (short)202,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 203,
                            Name = "EUR 2B",
                            Order = 3f,
                            QualityId = 12,
                            RefLmsQuality2PalletId = 2001,
                            RefLtmsPalletId = (short)203,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 204,
                            Name = "EUR D",
                            Order = 4f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 2002,
                            RefLtmsPalletId = (short)204,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 205,
                            Name = "EUR I",
                            Order = 0f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 2001,
                            RefLtmsPalletId = (short)205,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 206,
                            Name = "EUR Neu",
                            Order = 10f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 2005,
                            RefLtmsPalletId = (short)206,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 208,
                            Name = "EUR Schr",
                            Order = 6f,
                            QualityId = 20,
                            RefLmsQuality2PalletId = 2028,
                            RefLtmsPalletId = (short)208,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 209,
                            Name = "EUR EW",
                            Order = 7f,
                            QualityId = 14,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)209,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 210,
                            Name = "EUR Chep",
                            Order = 8f,
                            QualityId = 21,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)210,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 211,
                            Name = "EUR MPal",
                            Order = 9f,
                            QualityId = 22,
                            RefLmsQuality2PalletId = 2001,
                            RefLtmsPalletId = (short)211,
                            TypeId = 8
                        },
                        new
                        {
                            Id = 300,
                            Name = "GB U",
                            Order = 1f,
                            QualityId = -1,
                            RefLmsQuality2PalletId = 6011,
                            RefLtmsPalletId = (short)300,
                            TypeId = 13
                        },
                        new
                        {
                            Id = 301,
                            Name = "GB 1A",
                            Order = 0f,
                            QualityId = 10,
                            RefLmsQuality2PalletId = 6005,
                            RefLtmsPalletId = (short)301,
                            TypeId = 13
                        },
                        new
                        {
                            Id = 302,
                            Name = "GB I",
                            Order = 1f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 6011,
                            RefLtmsPalletId = (short)302,
                            TypeId = 13
                        },
                        new
                        {
                            Id = 303,
                            Name = "GB D",
                            Order = 2f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 6002,
                            RefLtmsPalletId = (short)303,
                            TypeId = 13
                        },
                        new
                        {
                            Id = 305,
                            Name = "GB EigV",
                            Order = 4f,
                            QualityId = 25,
                            RefLmsQuality2PalletId = 6011,
                            RefLtmsPalletId = (short)305,
                            TypeId = 13
                        },
                        new
                        {
                            Id = 400,
                            Name = "H1 U",
                            Order = 6f,
                            QualityId = -1,
                            RefLmsQuality2PalletId = 5012,
                            RefLtmsPalletId = (short)400,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 401,
                            Name = "H1 neu",
                            Order = 0f,
                            QualityId = 10,
                            RefLmsQuality2PalletId = 5005,
                            RefLtmsPalletId = (short)401,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 402,
                            Name = "H1 I",
                            Order = 1f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 5011,
                            RefLtmsPalletId = (short)402,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 403,
                            Name = "H1 mK",
                            Order = 3f,
                            QualityId = 15,
                            RefLmsQuality2PalletId = 5011,
                            RefLtmsPalletId = (short)403,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 404,
                            Name = "H1 oK",
                            Order = 4f,
                            QualityId = 16,
                            RefLmsQuality2PalletId = 5011,
                            RefLtmsPalletId = (short)404,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 405,
                            Name = "H1 sauber",
                            Order = 5f,
                            QualityId = 17,
                            RefLmsQuality2PalletId = 5011,
                            RefLtmsPalletId = (short)405,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 406,
                            Name = "H1 dreckig",
                            Order = 6f,
                            QualityId = 18,
                            RefLmsQuality2PalletId = 5012,
                            RefLtmsPalletId = (short)406,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 407,
                            Name = "H1 D",
                            Order = 2f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 5002,
                            RefLtmsPalletId = (short)407,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 408,
                            Name = "H1 ODmK",
                            Order = 7f,
                            QualityId = 26,
                            RefLmsQuality2PalletId = 5011,
                            RefLtmsPalletId = (short)408,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 409,
                            Name = "H1 ODoK",
                            Order = 8f,
                            QualityId = 27,
                            RefLmsQuality2PalletId = 5011,
                            RefLtmsPalletId = (short)409,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 410,
                            Name = "H1 Schr",
                            Order = 9f,
                            QualityId = 20,
                            RefLmsQuality2PalletId = 5002,
                            RefLtmsPalletId = (short)410,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 411,
                            Name = "H1 EW",
                            Order = 10f,
                            QualityId = 14,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)411,
                            TypeId = 18
                        },
                        new
                        {
                            Id = 450,
                            Name = "H1 DMiete I",
                            Order = 1f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)450,
                            TypeId = 19
                        },
                        new
                        {
                            Id = 502,
                            Name = "H1GD I",
                            Order = 1f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)502,
                            TypeId = 20
                        },
                        new
                        {
                            Id = 601,
                            Name = "E2EP Neu",
                            Order = 1f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 9005,
                            RefLtmsPalletId = (short)601,
                            TypeId = 6
                        },
                        new
                        {
                            Id = 602,
                            Name = "E2EP I",
                            Order = 2f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 9026,
                            RefLtmsPalletId = (short)602,
                            TypeId = 6
                        },
                        new
                        {
                            Id = 603,
                            Name = "E2EP D",
                            Order = 3f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 9002,
                            RefLtmsPalletId = (short)603,
                            TypeId = 6
                        },
                        new
                        {
                            Id = 701,
                            Name = "E2KR Neu",
                            Order = 1f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 10005,
                            RefLtmsPalletId = (short)701,
                            TypeId = 4
                        },
                        new
                        {
                            Id = 702,
                            Name = "E2KR I",
                            Order = 2f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 10026,
                            RefLtmsPalletId = (short)702,
                            TypeId = 4
                        },
                        new
                        {
                            Id = 703,
                            Name = "E2KR D",
                            Order = 3f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 10002,
                            RefLtmsPalletId = (short)703,
                            TypeId = 4
                        },
                        new
                        {
                            Id = 801,
                            Name = "E1KR Neu",
                            Order = 1f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 12005,
                            RefLtmsPalletId = (short)801,
                            TypeId = 10
                        },
                        new
                        {
                            Id = 802,
                            Name = "E1KR I",
                            Order = 2f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 12026,
                            RefLtmsPalletId = (short)802,
                            TypeId = 10
                        },
                        new
                        {
                            Id = 803,
                            Name = "E1KR D",
                            Order = 3f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 12002,
                            RefLtmsPalletId = (short)803,
                            TypeId = 10
                        },
                        new
                        {
                            Id = 901,
                            Name = "E1EP Neu",
                            Order = 1f,
                            QualityId = 19,
                            RefLmsQuality2PalletId = 11005,
                            RefLtmsPalletId = (short)901,
                            TypeId = 9
                        },
                        new
                        {
                            Id = 902,
                            Name = "E1EP I",
                            Order = 2f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 11026,
                            RefLtmsPalletId = (short)902,
                            TypeId = 9
                        },
                        new
                        {
                            Id = 903,
                            Name = "E1EP D",
                            Order = 3f,
                            QualityId = 2,
                            RefLmsQuality2PalletId = 11002,
                            RefLtmsPalletId = (short)903,
                            TypeId = 9
                        },
                        new
                        {
                            Id = -1,
                            Name = "U U",
                            Order = 0f,
                            QualityId = -1,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)0,
                            TypeId = -1
                        },
                        new
                        {
                            Id = -701,
                            Name = "Einweg I",
                            Order = 0f,
                            QualityId = 1,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)-701,
                            TypeId = 7
                        },
                        new
                        {
                            Id = -12,
                            Name = "U 2B",
                            Order = 0f,
                            QualityId = 12,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)-12,
                            TypeId = -1
                        },
                        new
                        {
                            Id = -512,
                            Name = "DplHaPa 2B",
                            Order = 0f,
                            QualityId = 12,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)-512,
                            TypeId = 5
                        },
                        new
                        {
                            Id = -813,
                            Name = "EUR 2+",
                            Order = 0f,
                            QualityId = 13,
                            RefLmsQuality2PalletId = 0,
                            RefLtmsPalletId = (short)-813,
                            TypeId = 8
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("OrderConditionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("OrderConditionId");

                    b.ToTable("LoadCarrierCondition");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierQuality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<float>("Order")
                        .HasColumnType("real");

                    b.Property<short>("RefLtmsQualityId")
                        .HasColumnType("smallint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefLtmsQualityId");

                    b.ToTable("LoadCarrierQualities");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Undef.",
                            Order = 0f,
                            RefLtmsQualityId = (short)0,
                            Type = 0
                        },
                        new
                        {
                            Id = 1,
                            Name = "Intakt",
                            Order = 1f,
                            RefLtmsQualityId = (short)1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Defekt",
                            Order = 6f,
                            RefLtmsQualityId = (short)2,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "1A",
                            Order = 2f,
                            RefLtmsQualityId = (short)10,
                            Type = 0
                        },
                        new
                        {
                            Id = 11,
                            Name = "2A",
                            Order = 4f,
                            RefLtmsQualityId = (short)11,
                            Type = 0
                        },
                        new
                        {
                            Id = 12,
                            Name = "2B",
                            Order = 5f,
                            RefLtmsQualityId = (short)12,
                            Type = 0
                        },
                        new
                        {
                            Id = 13,
                            Name = "2+",
                            Order = 3f,
                            RefLtmsQualityId = (short)13,
                            Type = 0
                        },
                        new
                        {
                            Id = 14,
                            Name = "Einweg",
                            Order = 7f,
                            RefLtmsQualityId = (short)14,
                            Type = 0
                        },
                        new
                        {
                            Id = 15,
                            Name = "GD mK",
                            Order = 8f,
                            RefLtmsQualityId = (short)15,
                            Type = 0
                        },
                        new
                        {
                            Id = 16,
                            Name = "GD oK",
                            Order = 9f,
                            RefLtmsQualityId = (short)16,
                            Type = 0
                        },
                        new
                        {
                            Id = 17,
                            Name = "Gereinigt",
                            Order = 10f,
                            RefLtmsQualityId = (short)17,
                            Type = 0
                        },
                        new
                        {
                            Id = 18,
                            Name = "Ungerein.",
                            Order = 11f,
                            RefLtmsQualityId = (short)18,
                            Type = 0
                        },
                        new
                        {
                            Id = 19,
                            Name = "neu",
                            Order = 1f,
                            RefLtmsQualityId = (short)19,
                            Type = 0
                        },
                        new
                        {
                            Id = 20,
                            Name = "Schrott",
                            Order = 13f,
                            RefLtmsQualityId = (short)20,
                            Type = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "Chep",
                            Order = 14f,
                            RefLtmsQualityId = (short)21,
                            Type = 0
                        },
                        new
                        {
                            Id = 22,
                            Name = "MPal",
                            Order = 15f,
                            RefLtmsQualityId = (short)22,
                            Type = 0
                        },
                        new
                        {
                            Id = 23,
                            Name = "2B MT",
                            Order = 16f,
                            RefLtmsQualityId = (short)23,
                            Type = 0
                        },
                        new
                        {
                            Id = 24,
                            Name = "2B Rmp",
                            Order = 17f,
                            RefLtmsQualityId = (short)24,
                            Type = 0
                        },
                        new
                        {
                            Id = 25,
                            Name = "EigVerw",
                            Order = 18f,
                            RefLtmsQualityId = (short)25,
                            Type = 0
                        },
                        new
                        {
                            Id = 26,
                            Name = "OD mK",
                            Order = 19f,
                            RefLtmsQualityId = (short)26,
                            Type = 0
                        },
                        new
                        {
                            Id = 27,
                            Name = "OD oK",
                            Order = 20f,
                            RefLtmsQualityId = (short)27,
                            Type = 0
                        },
                        new
                        {
                            Id = 28,
                            Name = "2BG",
                            Order = 5f,
                            RefLtmsQualityId = (short)28,
                            Type = 0
                        },
                        new
                        {
                            Id = 29,
                            Name = "2A+",
                            Order = 5f,
                            RefLtmsQualityId = (short)29,
                            Type = 0
                        },
                        new
                        {
                            Id = 30,
                            Name = "A",
                            Order = 5f,
                            RefLtmsQualityId = (short)29,
                            Type = 0
                        },
                        new
                        {
                            Id = 31,
                            Name = "B",
                            Order = 5f,
                            RefLtmsQualityId = (short)29,
                            Type = 0
                        },
                        new
                        {
                            Id = 32,
                            Name = "C",
                            Order = 5f,
                            RefLtmsQualityId = (short)29,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierQualityMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LoadCarrierQualityId")
                        .HasColumnType("int");

                    b.Property<int>("RefLmsQualityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoadCarrierQualityId");

                    b.HasIndex("RefLmsQualityId");

                    b.ToTable("LoadCarrierQualityMappings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LoadCarrierQualityId = 2,
                            RefLmsQualityId = 2
                        },
                        new
                        {
                            Id = 2,
                            LoadCarrierQualityId = 10,
                            RefLmsQualityId = 3
                        },
                        new
                        {
                            Id = 3,
                            LoadCarrierQualityId = 10,
                            RefLmsQualityId = 15
                        },
                        new
                        {
                            Id = 4,
                            LoadCarrierQualityId = 11,
                            RefLmsQualityId = 4
                        },
                        new
                        {
                            Id = 5,
                            LoadCarrierQualityId = 11,
                            RefLmsQualityId = 9
                        },
                        new
                        {
                            Id = 6,
                            LoadCarrierQualityId = 11,
                            RefLmsQualityId = 16
                        },
                        new
                        {
                            Id = 7,
                            LoadCarrierQualityId = 12,
                            RefLmsQualityId = 1
                        },
                        new
                        {
                            Id = 8,
                            LoadCarrierQualityId = 12,
                            RefLmsQualityId = 10
                        },
                        new
                        {
                            Id = 9,
                            LoadCarrierQualityId = 12,
                            RefLmsQualityId = 17
                        },
                        new
                        {
                            Id = 10,
                            LoadCarrierQualityId = 19,
                            RefLmsQualityId = 5
                        },
                        new
                        {
                            Id = 11,
                            LoadCarrierQualityId = 19,
                            RefLmsQualityId = 6
                        },
                        new
                        {
                            Id = 12,
                            LoadCarrierQualityId = 19,
                            RefLmsQualityId = 8
                        },
                        new
                        {
                            Id = 13,
                            LoadCarrierQualityId = 28,
                            RefLmsQualityId = 24
                        },
                        new
                        {
                            Id = 14,
                            LoadCarrierQualityId = 28,
                            RefLmsQualityId = 25
                        },
                        new
                        {
                            Id = 15,
                            LoadCarrierQualityId = 29,
                            RefLmsQualityId = 23
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerReference")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryNoteNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("DeliveryNoteShown")
                        .HasColumnType("bit");

                    b.Property<string>("DigitalCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("LicensePlateCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OrderLoadDetailId")
                        .HasColumnType("int");

                    b.Property<string>("PickUpNoteNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool?>("PickUpNoteShown")
                        .HasColumnType("bit");

                    b.Property<int?>("PostingAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("RefLmsAvail2DeliId")
                        .HasColumnType("int");

                    b.Property<int?>("ShipperAddressId")
                        .HasColumnType("int");

                    b.Property<string>("ShipperCompanyName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("TargetPostingAccountId")
                        .HasColumnType("int");

                    b.Property<int>("Trigger")
                        .HasColumnType("int");

                    b.Property<string>("TruckDriverCompanyName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TruckDriverName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerDivisionId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LicensePlateCountryId");

                    b.HasIndex("OrderLoadDetailId")
                        .IsUnique()
                        .HasFilter("[OrderLoadDetailId] IS NOT NULL");

                    b.HasIndex("PostingAccountId");

                    b.HasIndex("ShipperAddressId");

                    b.HasIndex("TargetPostingAccountId");

                    b.ToTable("LoadCarrierReceipts");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierReceiptPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("LoadCarrierQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("LoadCarrierReceiptId");

                    b.ToTable("LoadCarrierReceiptPosition");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseLoadCarrier")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("MaxStackHeight")
                        .HasColumnType("int");

                    b.Property<int>("MaxStackHeightJumbo")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<float>("Order")
                        .HasColumnType("real");

                    b.Property<int>("QuantityPerEur")
                        .HasColumnType("int");

                    b.Property<int>("RefLmsLoadCarrierTypeId")
                        .HasColumnType("int");

                    b.Property<short>("RefLtmsArticleId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("RefLmsLoadCarrierTypeId");

                    b.HasIndex("RefLtmsArticleId");

                    b.ToTable("LoadCarrierTypes");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 0,
                            MaxStackHeightJumbo = 0,
                            Name = "U",
                            Order = 99f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)0
                        },
                        new
                        {
                            Id = 1,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "CR1",
                            Order = 90f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)1
                        },
                        new
                        {
                            Id = 2,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "CR3",
                            Order = 90f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)2
                        },
                        new
                        {
                            Id = 3,
                            BaseLoadCarrier = 1,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "DD",
                            Order = 3f,
                            QuantityPerEur = 2,
                            RefLmsLoadCarrierTypeId = 1,
                            RefLtmsArticleId = (short)3
                        },
                        new
                        {
                            Id = 5,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "DplHaPa",
                            Order = 90f,
                            QuantityPerEur = 2,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)5
                        },
                        new
                        {
                            Id = 7,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "Einweg",
                            Order = 90f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)7
                        },
                        new
                        {
                            Id = 8,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "EUR",
                            Order = 1f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 2,
                            RefLtmsArticleId = (short)8
                        },
                        new
                        {
                            Id = 13,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 2,
                            MaxStackHeightJumbo = 3,
                            Name = "GB",
                            Order = 90f,
                            QuantityPerEur = 0,
                            RefLmsLoadCarrierTypeId = 6,
                            RefLtmsArticleId = (short)13
                        },
                        new
                        {
                            Id = 16,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 0,
                            MaxStackHeightJumbo = 0,
                            Name = "GB_DMiete",
                            Order = 90f,
                            QuantityPerEur = 0,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)16
                        },
                        new
                        {
                            Id = 18,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "H1",
                            Order = 4f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 5,
                            RefLtmsArticleId = (short)18
                        },
                        new
                        {
                            Id = 19,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 0,
                            MaxStackHeightJumbo = 0,
                            Name = "H1_DMiete",
                            Order = 4.6f,
                            QuantityPerEur = 0,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)19
                        },
                        new
                        {
                            Id = 20,
                            BaseLoadCarrier = 0,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "H1GD",
                            Order = 4.5f,
                            QuantityPerEur = 1,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)20
                        },
                        new
                        {
                            Id = 4,
                            BaseLoadCarrier = 2,
                            MaxStackHeight = 12,
                            MaxStackHeightJumbo = 16,
                            Name = "E2KR",
                            Order = 6.5f,
                            QuantityPerEur = 4,
                            RefLmsLoadCarrierTypeId = 10,
                            RefLtmsArticleId = (short)4
                        },
                        new
                        {
                            Id = 6,
                            BaseLoadCarrier = 2,
                            MaxStackHeight = 12,
                            MaxStackHeightJumbo = 16,
                            Name = "E2EP",
                            Order = 6f,
                            QuantityPerEur = 4,
                            RefLmsLoadCarrierTypeId = 9,
                            RefLtmsArticleId = (short)6
                        },
                        new
                        {
                            Id = 9,
                            BaseLoadCarrier = 2,
                            MaxStackHeight = 18,
                            MaxStackHeightJumbo = 24,
                            Name = "E1EP",
                            Order = 5f,
                            QuantityPerEur = 4,
                            RefLmsLoadCarrierTypeId = 11,
                            RefLtmsArticleId = (short)9
                        },
                        new
                        {
                            Id = 10,
                            BaseLoadCarrier = 2,
                            MaxStackHeight = 18,
                            MaxStackHeightJumbo = 24,
                            Name = "E1KR",
                            Order = 5.5f,
                            QuantityPerEur = 4,
                            RefLmsLoadCarrierTypeId = 12,
                            RefLtmsArticleId = (short)10
                        },
                        new
                        {
                            Id = 21,
                            BaseLoadCarrier = 1,
                            MaxStackHeight = 15,
                            MaxStackHeightJumbo = 20,
                            Name = "EPAL7",
                            Order = 2f,
                            QuantityPerEur = 2,
                            RefLmsLoadCarrierTypeId = 0,
                            RefLtmsArticleId = (short)21
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadingLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerDivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerPartnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("StackHeightMax")
                        .HasColumnType("int");

                    b.Property<int>("StackHeightMin")
                        .HasColumnType("int");

                    b.Property<bool>("SupportsJumboVehicles")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsPartialMatching")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsRearLoading")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsSideLoading")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerDivisionId");

                    b.HasIndex("CustomerPartnerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PartnerId");

                    b.ToTable("LoadingLocations");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LocalizationItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LocalizationItems");

                    b.HasData(
                        new
                        {
                            Id = 10001,
                            Name = "LoadCarriers",
                            Type = 0
                        },
                        new
                        {
                            Id = 10010,
                            Name = "LoadCarrierQualities",
                            Type = 0
                        },
                        new
                        {
                            Id = 10020,
                            Name = "LoadCarrierTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10021,
                            FieldName = "LongName",
                            Name = "LoadCarrierTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10030,
                            Name = "Countries",
                            Type = 0
                        },
                        new
                        {
                            Id = 10040,
                            Name = "CountryStates",
                            Type = 0
                        },
                        new
                        {
                            Id = 10050,
                            Name = "PublicHolidays",
                            Type = 0
                        },
                        new
                        {
                            Id = 10060,
                            Name = "DocumentTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10061,
                            FieldName = "ShortName",
                            Name = "DocumentTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10062,
                            FieldName = "Description",
                            Name = "DocumentTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10070,
                            Name = "DocumentStates",
                            Type = 0
                        },
                        new
                        {
                            Id = 10080,
                            Name = "VoucherReasonTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10081,
                            FieldName = "ShortName",
                            Name = "VoucherReasonTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10082,
                            FieldName = "Description",
                            Name = "VoucherReasonTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10083,
                            FieldName = "DescriptionReport",
                            Name = "VoucherReasonTypes",
                            Type = 0
                        },
                        new
                        {
                            Id = 10090,
                            Name = "LocalizationLanguages",
                            Type = 0
                        },
                        new
                        {
                            Id = 20000,
                            Name = "AccountingRecordType",
                            Reference = "Dpl.B2b.Contracts.Models.AccountingRecordType",
                            Type = 1
                        },
                        new
                        {
                            Id = 20007,
                            FieldName = "name",
                            Name = "AccountingRecordType",
                            Reference = "Dpl.B2b.Contracts.Models.AccountingRecordType",
                            Type = 1
                        },
                        new
                        {
                            Id = 20008,
                            FieldName = "description",
                            Name = "AccountingRecordType",
                            Reference = "Dpl.B2b.Contracts.Models.AccountingRecordType",
                            Type = 1
                        },
                        new
                        {
                            Id = 20001,
                            Name = "AccountingRecordStatus",
                            Reference = "Dpl.B2b.Contracts.Models.AccountingRecordStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 20002,
                            Name = "LoadCarrierTransferStatus",
                            Reference = "Dpl.B2b.Contracts.Models.BalanceTransferStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 20003,
                            Name = "LoadCarrierQualityType",
                            Reference = "Dpl.B2b.Common.Enumerations.LoadCarrierQualityType",
                            Type = 1
                        },
                        new
                        {
                            Id = 20004,
                            Name = "OrderType",
                            Reference = "Dpl.B2b.Common.Enumerations.OrderType",
                            Type = 1
                        },
                        new
                        {
                            Id = 20005,
                            Name = "OrderTransportType",
                            Reference = "Dpl.B2b.Common.Enumerations.OrderTransportType",
                            Type = 1
                        },
                        new
                        {
                            Id = 20006,
                            Name = "OrderQuantityType",
                            Reference = "Dpl.B2b.Common.Enumerations.OrderQuantityType",
                            Type = 1
                        },
                        new
                        {
                            Id = 107,
                            Name = "OrderStatus",
                            Reference = "Dpl.B2b.Common.Enumerations.OrderStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 108,
                            Name = "OrderMatchStatus",
                            Reference = "Dpl.B2b.Common.Enumerations.OrderMatchStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 109,
                            Name = "PostingAccountType",
                            Reference = "Dpl.B2b.Contracts.Models.PostingAccountType",
                            Type = 1
                        },
                        new
                        {
                            Id = 110,
                            Name = "SubmissionType",
                            Reference = "Dpl.B2b.Contracts.Models.SubmissionType",
                            Type = 1
                        },
                        new
                        {
                            Id = 111,
                            Name = "ResourceType",
                            Reference = "Dpl.B2b.Common.Enumerations.PermissionResourceType",
                            Type = 1
                        },
                        new
                        {
                            Id = 112,
                            Name = "VoucherType",
                            Reference = "Dpl.B2b.Common.Enumerations.VoucherType",
                            Type = 1
                        },
                        new
                        {
                            Id = 113,
                            Name = "VoucherStatus",
                            Reference = "Dpl.B2b.Common.Enumerations.VoucherStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 114,
                            Name = "PartnerType",
                            Reference = "Dpl.B2b.Common.Enumerations.PartnerType",
                            Type = 1
                        },
                        new
                        {
                            Id = 115,
                            Name = "DayOfWeek",
                            Reference = "System.DayOfWeek",
                            Type = 1
                        },
                        new
                        {
                            Id = 116,
                            Name = "AdhocTranslations",
                            Reference = "Dpl.B2b.Common.Enumerations.AdhocTranslations",
                            Type = 1
                        },
                        new
                        {
                            Id = 117,
                            Name = "UserRole",
                            Reference = "Dpl.B2b.Common.Enumerations.UserRole",
                            Type = 1
                        },
                        new
                        {
                            Id = 118,
                            Name = "PersonGender",
                            Reference = "Dpl.B2b.Common.Enumerations.PersonGender",
                            Type = 1
                        },
                        new
                        {
                            Id = 119,
                            Name = "LoadCarrierReceiptType",
                            Reference = "Dpl.B2b.Common.Enumerations.LoadCarrierReceiptType",
                            Type = 1
                        },
                        new
                        {
                            Id = 120,
                            Name = "TransportOfferingStatus",
                            Reference = "Dpl.B2b.Contracts.Models.TransportOfferingStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 121,
                            Name = "TransportBidStatus",
                            Reference = "Dpl.B2b.Common.Enumerations.TransportBidStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 122,
                            Name = "DocumentTypeEnum",
                            Reference = "Dpl.B2b.Common.Enumerations.DocumentTypeEnum",
                            Type = 1
                        },
                        new
                        {
                            Id = 123,
                            FieldName = "ReportVoucherCommonTitle",
                            Name = "DocumentTypeEnum",
                            Reference = "Dpl.B2b.Common.Enumerations.DocumentTypeEnum",
                            Type = 1
                        },
                        new
                        {
                            Id = 124,
                            Name = "OrderLoadStatus",
                            Reference = "Dpl.B2b.Common.Enumerations.OrderLoadStatus",
                            Type = 1
                        },
                        new
                        {
                            Id = 125,
                            Name = "EmployeeNoteType",
                            Reference = "Dpl.B2b.Common.Enumerations.EmployeeNoteType",
                            Type = 1
                        },
                        new
                        {
                            Id = 126,
                            Name = "EmployeeNoteReason",
                            Reference = "Dpl.B2b.Common.Enumerations.EmployeeNoteReason",
                            Type = 1
                        },
                        new
                        {
                            Id = 30000,
                            Name = "NotAllowedByRule",
                            Reference = "Dpl.B2b.Contracts.Rules.Messages.Errors.Common.NotAllowedByRule",
                            Type = 2
                        },
                        new
                        {
                            Id = 30001,
                            Name = "OrderGroupCancel",
                            Reference = "Dpl.B2b.Contracts.Rules.Messages.Errors.OrderGroup.OrderGroupCancel",
                            Type = 2
                        },
                        new
                        {
                            Id = 30002,
                            Name = "OrderGroupHasOpenOrConfirmedOrders",
                            Reference = "Dpl.B2b.Contracts.Rules.Messages.Errors.OrderGroup.OrderGroupHasOpenOrConfirmedOrders",
                            Type = 2
                        },
                        new
                        {
                            Id = 30003,
                            Name = "OrderGroupHasOrders",
                            Reference = "Dpl.B2b.Contracts.Rules.Messages.Errors.OrderGroup.OrderGroupHasOrders",
                            Type = 2
                        },
                        new
                        {
                            Id = 40000,
                            Name = "OrderGroupHasOrders",
                            Reference = "Dpl.B2b.Contracts.Rules.Messages.Warnings.Common.NoGuarantee",
                            Type = 3
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LocalizationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("LocalizationLanguages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Locale = "de",
                            Name = "Deutsch"
                        },
                        new
                        {
                            Id = 2,
                            Locale = "en",
                            Name = "Englisch"
                        },
                        new
                        {
                            Id = 3,
                            Locale = "fr",
                            Name = "Französisch"
                        },
                        new
                        {
                            Id = 4,
                            Locale = "pl",
                            Name = "Polnisch"
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LocalizationText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GeneratedId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("LocalizationItemId")
                        .HasColumnType("int");

                    b.Property<int?>("LocalizationLanguageId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("LocalizationItemId");

                    b.HasIndex("LocalizationLanguageId");

                    b.ToTable("LocalizationTexts");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseLoadCarrierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EarliestFulfillmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LatestFulfillmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("LoadingLocationId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfStacks")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OrderSerieId")
                        .HasColumnType("int");

                    b.Property<int>("PostingAccountId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityType")
                        .HasColumnType("int");

                    b.Property<Guid>("RefLmsOrderRowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StackHeightMax")
                        .HasColumnType("int");

                    b.Property<int>("StackHeightMin")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("SupportsJumboVehicles")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsPartialMatching")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsRearLoading")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsSideLoading")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SyncNote")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("TransportType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("RefLmsOrderRowGuid");

                    b.HasIndex("BaseLoadCarrierId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DivisionId");

                    b.HasIndex("GroupId");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("LoadingLocationId");

                    b.HasIndex("OrderSerieId");

                    b.HasIndex("PostingAccountId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LatestDeliveryDayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<int>("PostingAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PostingAccountId");

                    b.ToTable("OrderConditions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("OrderGroups");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderLoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int?>("DemandOrderMatchId")
                        .HasColumnType("int");

                    b.Property<int>("DetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyOrderMatchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DetailId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLoad");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderLoadDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualFulfillmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierReceiptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlannedFulfillmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("OrderLoadDetail");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseLoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("BaseLoadCarrierQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int?>("DemandId")
                        .HasColumnType("int");

                    b.Property<string>("DigitalCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("LoadCarrierQuantity")
                        .HasColumnType("int");

                    b.Property<int>("LoadCarrierStackHeight")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfStacks")
                        .HasColumnType("int");

                    b.Property<string>("OrderMatchNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("RefLmsAvailabilityRowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefLmsDeliveryRowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SelfTransportSide")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyId")
                        .HasColumnType("int");

                    b.Property<bool>("SupportsJumboVehicles")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsRearLoading")
                        .HasColumnType("bit");

                    b.Property<bool>("SupportsSideLoading")
                        .HasColumnType("bit");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<int>("TransportType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseLoadCarrierId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DemandId")
                        .IsUnique()
                        .HasFilter("[DemandId] IS NOT NULL");

                    b.HasIndex("DigitalCode")
                        .IsUnique()
                        .HasFilter("[DigitalCode] IS NOT NULL");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("SupplyId")
                        .IsUnique()
                        .HasFilter("[SupplyId] IS NOT NULL");

                    b.ToTable("OrderMatches");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("OrderSeries");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderSyncError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeadLetterErrorDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("DeadLetterReason")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("EnqueuedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MessageDeliveryCount")
                        .HasColumnType("int");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("SyncErrorStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderSyncError");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrganizationPartnerDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerDirectoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PartnerDirectoryId");

                    b.ToTable("OrganizationPartnerDirectories");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultPostingAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPoolingPartner")
                        .HasColumnType("bit");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DefaultAddressId");

                    b.HasIndex("DefaultPostingAccountId")
                        .IsUnique()
                        .HasFilter("[DefaultPostingAccountId] IS NOT NULL");

                    b.HasIndex("DeletedById");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PartnerDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("PartnerDirectories");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PartnerDirectoryAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DirectoryId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("DirectoryId1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DirectoryId1");

                    b.HasIndex("PartnerId");

                    b.ToTable("PartnerDirectoryAccesses");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PartnerPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpressCodeId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpressCodeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("ExpressCodePartnerPresets");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int");

                    b.Property<int>("Resource")
                        .HasColumnType("int");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("CalculatedBalanceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId1")
                        .HasColumnType("int");

                    b.Property<string>("RefLtmsAccountCustomerNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("RefLtmsAccountId")
                        .HasColumnType("int");

                    b.Property<string>("RefLtmsAccountIdString")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(255)")
                        .HasComputedColumnSql("CONVERT(nvarchar(255), [RefLtmsAccountId])")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("RefLtmsAccountId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DisplayName");

                    b.HasIndex("ParentId");

                    b.HasIndex("PartnerId1");

                    b.HasIndex("RefLtmsAccountCustomerNumber");

                    b.HasIndex("RefLtmsAccountIdString");

                    b.ToTable("PostingAccounts");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingAccountPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DestinationAccountId")
                        .HasColumnType("int");

                    b.Property<int>("ExpressCodeId")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationAccountId");

                    b.HasIndex("ExpressCodeId")
                        .IsUnique();

                    b.ToTable("PostingAccountPresets");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DestinationRefLtmsAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DplNoteId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("LoadCarrierQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("LoadCarrierReceiptId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("OrderLoadDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderMatchId")
                        .HasColumnType("int");

                    b.Property<int>("PostingAccountId")
                        .HasColumnType("int");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<Guid>("RefLtmsProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RefLtmsProcessTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("RefLtmsTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SourceRefLtmsAccountId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubmissionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SyncNote")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DplNoteId");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("LoadCarrierReceiptId");

                    b.HasIndex("OrderLoadDetailId");

                    b.HasIndex("OrderMatchId");

                    b.HasIndex("PostingAccountId");

                    b.HasIndex("SubmissionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PostingRequests");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingRequestSyncError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeadLetterErrorDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("DeadLetterReason")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("EnqueuedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MessageDeliveryCount")
                        .HasColumnType("int");

                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<Guid>("RefLtmsTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("SyncErrorStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("PostingRequestSyncError");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PublicHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.ToTable("PublicHolidays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Date = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Neujahr"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Date = new DateTime(2020, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tag der Deutschen Einheit"
                        },
                        new
                        {
                            Id = 3,
                            CountryStateId = 2,
                            Date = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Allerheiligen"
                        },
                        new
                        {
                            Id = 4,
                            CountryStateId = 10,
                            Date = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Allerheiligen"
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingInterruption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("SortingInterruptions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingShiftLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ResponsibleUserId")
                        .HasColumnType("int");

                    b.Property<int>("SortingWorkerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ResponsibleUserId");

                    b.HasIndex("SortingWorkerId");

                    b.ToTable("SortingShiftLogs");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingShiftLogPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SortingShiftLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("SortingShiftLogId");

                    b.ToTable("SortingShiftLogPositions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceStaffNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("SortingWorkers");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostingAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("SubmitterProfileId")
                        .HasColumnType("int");

                    b.Property<int>("SubmitterType")
                        .HasColumnType("int");

                    b.Property<int?>("SubmitterUserId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PostingAccountId");

                    b.HasIndex("SubmitterProfileId");

                    b.HasIndex("SubmitterUserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SubmitterProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("SubmitterProfiles");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ConfirmedLatestBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderMatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlannedLatestBy")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RefLmsAvail2DeliRowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<long?>("RoutedDistance")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("WinningBidId")
                        .HasColumnType("int");

                    b.Property<int?>("WinningBidId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("OrderMatchId")
                        .IsUnique()
                        .HasFilter("[OrderMatchId] IS NOT NULL");

                    b.HasIndex("WinningBidId1");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.TransportBid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("smallmoney");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TransportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TransportId");

                    b.ToTable("TransportBids");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderNotificationsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Upn")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("UserSettingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemGroup")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.ToTable("UserGroups");

                    b.HasDiscriminator<int>("Type");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.UserUserGroupRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUserGroupRelations");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerDivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpressCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("LicensePlateCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ReasonTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceivingCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceivingPostingAccountId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientType")
                        .HasColumnType("int");

                    b.Property<int?>("ShipperId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubShipperId")
                        .HasColumnType("int");

                    b.Property<int?>("SubmissionId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TruckDriverCompanyName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TruckDriverName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerDivisionId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ExpressCodeId");

                    b.HasIndex("LicensePlateCountryId");

                    b.HasIndex("ReasonTypeId");

                    b.HasIndex("ReceivingCustomerId");

                    b.HasIndex("ReceivingPostingAccountId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("SubShipperId");

                    b.HasIndex("SubmissionId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.VoucherPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoadCarrierId")
                        .HasColumnType("int");

                    b.Property<int>("LoadCarrierQuantity")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LoadCarrierId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherPosition");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.VoucherReasonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("RefLtmsReasonTypeId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("VoucherReasonTypes");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Keine Angaben",
                            Name = "k.A.",
                            Order = 99,
                            RefLtmsReasonTypeId = "KAG"
                        },
                        new
                        {
                            Id = 1,
                            Description = "kein Tausch notwendig.  Kunde ist DPL-Pooling Partner.",
                            Name = "PT.",
                            Order = 2,
                            RefLtmsReasonTypeId = "IPT"
                        },
                        new
                        {
                            Id = 2,
                            Description = "kein Tausch erfolgt. Aussteller tauschte nicht.",
                            Name = "KTG",
                            Order = 1,
                            RefLtmsReasonTypeId = "KTM"
                        },
                        new
                        {
                            Id = 3,
                            Description = "kein Tausch gewünscht. Fahrer verweigert.",
                            Name = "KTM",
                            Order = 3,
                            RefLtmsReasonTypeId = "KTG"
                        });
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDivisionUserGroup", b =>
                {
                    b.HasBaseType("Dpl.B2b.Dal.Models.UserGroup");

                    b.Property<int>("CustomerDivisionId")
                        .HasColumnType("int");

                    b.HasIndex("CustomerDivisionId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerUserGroup", b =>
                {
                    b.HasBaseType("Dpl.B2b.Dal.Models.UserGroup");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasIndex("CustomerId");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrganizationUserGroup", b =>
                {
                    b.HasBaseType("Dpl.B2b.Dal.Models.UserGroup");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasIndex("OrganizationId");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.AdditionalField", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.AdditionalFieldValue", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.AdditionalField", "AdditionalField")
                        .WithMany()
                        .HasForeignKey("AdditionalFieldId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Address", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", null)
                        .WithMany("Addresses")
                        .HasForeignKey("PartnerId");

                    b.HasOne("Dpl.B2b.Dal.Models.CountryState", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.BaseLoadCarrierMapping", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany("BaseLoadCarrierMappings")
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierType", "LoadCarrierType")
                        .WithMany("BaseLoadCarrierMappings")
                        .HasForeignKey("LoadCarrierTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.BusinessHour", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadingLocation", null)
                        .WithMany("BusinessHours")
                        .HasForeignKey("LoadingLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.BusinessHourException", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadingLocation", null)
                        .WithMany("BusinessHourExceptions")
                        .HasForeignKey("LoadingLocationId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CalculatedBalance", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "PostingAccount")
                        .WithOne("CalculatedBalance")
                        .HasForeignKey("Dpl.B2b.Dal.Models.CalculatedBalance", "PostingAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CalculatedBalancePosition", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.CalculatedBalance", null)
                        .WithMany("Positions")
                        .HasForeignKey("CalculatedBalanceId");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CountryState", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Country", null)
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Customer", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Organization", "Organization")
                        .WithMany("Customers")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", "Partner")
                        .WithOne("Customer")
                        .HasForeignKey("Dpl.B2b.Dal.Models.Customer", "PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDivision", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany("Divisions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadingLocation", "DefaultLoadingLocation")
                        .WithMany()
                        .HasForeignKey("DefaultLoadingLocationId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "PostingAccount")
                        .WithMany("CustomerDivisions")
                        .HasForeignKey("PostingAccountId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDivisionDocumentSetting", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "Division")
                        .WithMany("DocumentSettings")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.DocumentNumberSequence", "DocumentNumberSequence")
                        .WithMany()
                        .HasForeignKey("DocumentNumberSequenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDocumentSetting", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany("DocumentSettings")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierType", "LoadCarrierType")
                        .WithMany()
                        .HasForeignKey("LoadCarrierTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerIpSecurityRule", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Organization", null)
                        .WithMany("CustomerIpSecurityRules")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerPartner", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", "Partner")
                        .WithMany("CustomerPartners")
                        .HasForeignKey("PartnerId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerPartnerDirectoryAccess", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerPartner", "Partner")
                        .WithMany("DirectoryAccesses")
                        .HasForeignKey("CustomerPartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.PartnerDirectory", "Directory")
                        .WithMany("CustomerPartnerDirectoryAccesses")
                        .HasForeignKey("DirectoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerSortingWorker", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany("SortingWorkerMapping")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dpl.B2b.Dal.Models.SortingWorker", "SortingWorker")
                        .WithMany("CustomerSortingWorkers")
                        .HasForeignKey("SortingWorkerId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DeliveryNote", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Submission", null)
                        .WithMany("DeliveryNotes")
                        .HasForeignKey("SubmissionId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Document", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "CustomerDivision")
                        .WithMany()
                        .HasForeignKey("CustomerDivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LocalizationLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierReceipt", "LoadCarrierReceipt")
                        .WithOne("Document")
                        .HasForeignKey("Dpl.B2b.Dal.Models.Document", "LoadCarrierReceiptId");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderMatch", "OrderMatch")
                        .WithOne("Document")
                        .HasForeignKey("Dpl.B2b.Dal.Models.Document", "OrderMatchId");

                    b.HasOne("Dpl.B2b.Dal.Models.DocumentState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.DocumentType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Voucher", "Voucher")
                        .WithOne("Document")
                        .HasForeignKey("Dpl.B2b.Dal.Models.Document", "VoucherId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentFile", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Document", null)
                        .WithMany("Files")
                        .HasForeignKey("DocumentId");

                    b.HasOne("Dpl.B2b.Dal.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentNumberSequence", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", null)
                        .WithMany("DocumentNumberSequences")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentReport", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentTemplate", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.DocumentTemplateLabel", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.DocumentTemplate", null)
                        .WithMany("Labels")
                        .HasForeignKey("DocumentTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LocalizationLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.EmployeeNote", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierReceipt", null)
                        .WithMany("DplNotes")
                        .HasForeignKey("LoadCarrierReceiptId");

                    b.HasOne("Dpl.B2b.Dal.Models.Order", null)
                        .WithMany("DplNotes")
                        .HasForeignKey("OrderId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Voucher", null)
                        .WithMany("DplNotes")
                        .HasForeignKey("VoucherId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.ExpressCode", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "IssuingCustomer")
                        .WithMany()
                        .HasForeignKey("IssuingCustomerId");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "IssuingDivision")
                        .WithMany()
                        .HasForeignKey("IssuingDivisionId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", null)
                        .WithMany("ExpressCodes")
                        .HasForeignKey("PostingAccountId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrier", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierQuality", "Quality")
                        .WithMany("LoadCarriers")
                        .HasForeignKey("QualityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierCondition", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.OrderCondition", null)
                        .WithMany("LoadCarrierConditions")
                        .HasForeignKey("OrderConditionId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierQualityMapping", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierQuality", "LoadCarrierQuality")
                        .WithMany("Mappings")
                        .HasForeignKey("LoadCarrierQualityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierReceipt", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "CustomerDivision")
                        .WithMany()
                        .HasForeignKey("CustomerDivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Country", "LicensePlateCountry")
                        .WithMany()
                        .HasForeignKey("LicensePlateCountryId");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderLoadDetail", "OrderLoadDetail")
                        .WithOne("LoadCarrierReceipt")
                        .HasForeignKey("Dpl.B2b.Dal.Models.LoadCarrierReceipt", "OrderLoadDetailId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "PostingAccount")
                        .WithMany()
                        .HasForeignKey("PostingAccountId");

                    b.HasOne("Dpl.B2b.Dal.Models.Address", "ShipperAddress")
                        .WithMany()
                        .HasForeignKey("ShipperAddressId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "TargetPostingAccount")
                        .WithMany()
                        .HasForeignKey("TargetPostingAccountId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadCarrierReceiptPosition", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierReceipt", "LoadCarrierReceipt")
                        .WithMany("Positions")
                        .HasForeignKey("LoadCarrierReceiptId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LoadingLocation", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "CustomerDivision")
                        .WithMany("LoadingLocations")
                        .HasForeignKey("CustomerDivisionId");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerPartner", "CustomerPartner")
                        .WithMany("LoadingLocations")
                        .HasForeignKey("CustomerPartnerId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", "Partner")
                        .WithMany("LoadingLocations")
                        .HasForeignKey("PartnerId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.LocalizationText", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LocalizationItem", "LocalizationItem")
                        .WithMany()
                        .HasForeignKey("LocalizationItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LocalizationLanguage", null)
                        .WithMany("LocalizationTexts")
                        .HasForeignKey("LocalizationLanguageId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Order", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "BaseLoadCarrier")
                        .WithMany()
                        .HasForeignKey("BaseLoadCarrierId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.OrderGroup", "Group")
                        .WithMany("Orders")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadingLocation", "LoadingLocation")
                        .WithMany()
                        .HasForeignKey("LoadingLocationId");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderSerie", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderSerieId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "PostingAccount")
                        .WithMany("Orders")
                        .HasForeignKey("PostingAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderCondition", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", null)
                        .WithMany("OrderConditions")
                        .HasForeignKey("PostingAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderGroup", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderLoad", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderLoadDetail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Order", "Order")
                        .WithMany("Loads")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderLoadDetail", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderMatch", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "BaseLoadCarrier")
                        .WithMany()
                        .HasForeignKey("BaseLoadCarrierId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderLoad", "Demand")
                        .WithOne("DemandOrderMatch")
                        .HasForeignKey("Dpl.B2b.Dal.Models.OrderMatch", "DemandId");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.OrderLoad", "Supply")
                        .WithOne("SupplyOrderMatch")
                        .HasForeignKey("Dpl.B2b.Dal.Models.OrderMatch", "SupplyId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderSerie", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrderSyncError", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Organization", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrganizationPartnerDirectory", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.PartnerDirectory", "PartnerDirectory")
                        .WithMany("OrganizationPartnerDirectories")
                        .HasForeignKey("PartnerDirectoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Partner", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Address", "DefaultAddress")
                        .WithMany()
                        .HasForeignKey("DefaultAddressId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "DefaultPostingAccount")
                        .WithOne("Partner")
                        .HasForeignKey("Dpl.B2b.Dal.Models.Partner", "DefaultPostingAccountId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PartnerDirectory", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PartnerDirectoryAccess", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.PartnerDirectory", "Directory")
                        .WithMany("PartnerDirectoryAccesses")
                        .HasForeignKey("DirectoryId1");

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", "Partner")
                        .WithMany("DirectoryAccesses")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PartnerPreset", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.ExpressCode", "ExpressCode")
                        .WithMany("PartnerPresets")
                        .HasForeignKey("ExpressCodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", "Partner")
                        .WithMany("ExpressCodePresets")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Permission", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.UserGroup", "UserGroup")
                        .WithMany("Permissions")
                        .HasForeignKey("UserGroupId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Person", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingAccount", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("Dpl.B2b.Dal.Models.Partner", null)
                        .WithMany("PostingAccounts")
                        .HasForeignKey("PartnerId1");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingAccountPreset", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "DestinationAccount")
                        .WithMany()
                        .HasForeignKey("DestinationAccountId");

                    b.HasOne("Dpl.B2b.Dal.Models.ExpressCode", "ExpressCode")
                        .WithOne("PostingAccountPreset")
                        .HasForeignKey("Dpl.B2b.Dal.Models.PostingAccountPreset", "ExpressCodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PostingRequest", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.EmployeeNote", "DplNote")
                        .WithMany()
                        .HasForeignKey("DplNoteId");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrierReceipt", "LoadCarrierReceipt")
                        .WithMany("PostingRequests")
                        .HasForeignKey("LoadCarrierReceiptId");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderLoadDetail", null)
                        .WithMany("PostingRequests")
                        .HasForeignKey("OrderLoadDetailId");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderMatch", "OrderMatch")
                        .WithMany()
                        .HasForeignKey("OrderMatchId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "PostingAccount")
                        .WithMany("PostingRequests")
                        .HasForeignKey("PostingAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Submission", "Submission")
                        .WithMany("PostingRequests")
                        .HasForeignKey("SubmissionId");

                    b.HasOne("Dpl.B2b.Dal.Models.Voucher", "Voucher")
                        .WithMany("PostingRequests")
                        .HasForeignKey("VoucherId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.PublicHoliday", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Country", null)
                        .WithMany("PublicHolidays")
                        .HasForeignKey("CountryId");

                    b.HasOne("Dpl.B2b.Dal.Models.CountryState", null)
                        .WithMany("PublicHolidays")
                        .HasForeignKey("CountryStateId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingInterruption", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingShiftLog", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.SortingWorker", "SortingWorker")
                        .WithMany()
                        .HasForeignKey("SortingWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingShiftLogPosition", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.SortingShiftLog", null)
                        .WithMany("Positions")
                        .HasForeignKey("SortingShiftLogId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SortingWorker", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Submission", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "PostingAccount")
                        .WithMany()
                        .HasForeignKey("PostingAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.SubmitterProfile", "SubmitterProfile")
                        .WithMany()
                        .HasForeignKey("SubmitterProfileId");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "SubmitterUser")
                        .WithMany("Submissions")
                        .HasForeignKey("SubmitterUserId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.SubmitterProfile", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Transport", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.OrderMatch", "OrderMatch")
                        .WithOne("Transport")
                        .HasForeignKey("Dpl.B2b.Dal.Models.Transport", "OrderMatchId");

                    b.HasOne("Dpl.B2b.Dal.Models.TransportBid", "WinningBid")
                        .WithMany()
                        .HasForeignKey("WinningBidId1");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.TransportBid", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Transport", "Transport")
                        .WithMany("Bids")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.User", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany("Users")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.Person", "Person")
                        .WithOne()
                        .HasForeignKey("Dpl.B2b.Dal.Models.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.UserGroup", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.UserSetting", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", null)
                        .WithOne("UserSettings")
                        .HasForeignKey("Dpl.B2b.Dal.Models.UserSetting", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.UserUserGroupRelation", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.UserGroup", "UserGroup")
                        .WithMany("Users")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.Voucher", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "CustomerDivision")
                        .WithMany("Vouchers")
                        .HasForeignKey("CustomerDivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.ExpressCode", "ExpressCode")
                        .WithMany()
                        .HasForeignKey("ExpressCodeId");

                    b.HasOne("Dpl.B2b.Dal.Models.Country", "LicensePlateCountry")
                        .WithMany()
                        .HasForeignKey("LicensePlateCountryId");

                    b.HasOne("Dpl.B2b.Dal.Models.VoucherReasonType", "ReasonType")
                        .WithMany()
                        .HasForeignKey("ReasonTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "ReceivingCustomer")
                        .WithMany()
                        .HasForeignKey("ReceivingCustomerId");

                    b.HasOne("Dpl.B2b.Dal.Models.PostingAccount", "ReceivingPostingAccount")
                        .WithMany()
                        .HasForeignKey("ReceivingPostingAccountId");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerPartner", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerPartner", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerPartner", "SubShipper")
                        .WithMany()
                        .HasForeignKey("SubShipperId");

                    b.HasOne("Dpl.B2b.Dal.Models.Submission", null)
                        .WithMany("Vouchers")
                        .HasForeignKey("SubmissionId");

                    b.HasOne("Dpl.B2b.Dal.Models.CustomerPartner", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.VoucherPosition", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.User", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Dpl.B2b.Dal.Models.User", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Dpl.B2b.Dal.Models.LoadCarrier", "LoadCarrier")
                        .WithMany()
                        .HasForeignKey("LoadCarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dpl.B2b.Dal.Models.Voucher", "Voucher")
                        .WithMany("Positions")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerDivisionUserGroup", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.CustomerDivision", "CustomerDivisionDivision")
                        .WithMany()
                        .HasForeignKey("CustomerDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.CustomerUserGroup", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dpl.B2b.Dal.Models.OrganizationUserGroup", b =>
                {
                    b.HasOne("Dpl.B2b.Dal.Models.Organization", "Customer")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
